# Python stubs generated by omniidl from idl/OpenHRPCommon.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "OpenHRP"
#
__name__ = "OpenHRP"
_0_OpenHRP = omniORB.openModule("OpenHRP", r"idl/OpenHRPCommon.idl")
_0_OpenHRP__POA = omniORB.openModule("OpenHRP__POA", r"idl/OpenHRPCommon.idl")


# typedef ... FloatSequence
class FloatSequence:
    _NP_RepositoryId = "IDL:OpenHRP/FloatSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.FloatSequence = FloatSequence
_0_OpenHRP._d_FloatSequence  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_float, 0)
_0_OpenHRP._ad_FloatSequence = (omniORB.tcInternal.tv_alias, FloatSequence._NP_RepositoryId, "FloatSequence", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_float, 0))
_0_OpenHRP._tc_FloatSequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_FloatSequence)
omniORB.registerType(FloatSequence._NP_RepositoryId, _0_OpenHRP._ad_FloatSequence, _0_OpenHRP._tc_FloatSequence)
del FloatSequence

# typedef ... ShortSequence
class ShortSequence:
    _NP_RepositoryId = "IDL:OpenHRP/ShortSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.ShortSequence = ShortSequence
_0_OpenHRP._d_ShortSequence  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_short, 0)
_0_OpenHRP._ad_ShortSequence = (omniORB.tcInternal.tv_alias, ShortSequence._NP_RepositoryId, "ShortSequence", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_short, 0))
_0_OpenHRP._tc_ShortSequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_ShortSequence)
omniORB.registerType(ShortSequence._NP_RepositoryId, _0_OpenHRP._ad_ShortSequence, _0_OpenHRP._tc_ShortSequence)
del ShortSequence

# typedef ... OctetSequence
class OctetSequence:
    _NP_RepositoryId = "IDL:OpenHRP/OctetSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.OctetSequence = OctetSequence
_0_OpenHRP._d_OctetSequence  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0)
_0_OpenHRP._ad_OctetSequence = (omniORB.tcInternal.tv_alias, OctetSequence._NP_RepositoryId, "OctetSequence", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0))
_0_OpenHRP._tc_OctetSequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_OctetSequence)
omniORB.registerType(OctetSequence._NP_RepositoryId, _0_OpenHRP._ad_OctetSequence, _0_OpenHRP._tc_OctetSequence)
del OctetSequence

# typedef ... DblArray4
class DblArray4:
    _NP_RepositoryId = "IDL:OpenHRP/DblArray4:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.DblArray4 = DblArray4
_0_OpenHRP._d_DblArray4  = (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_double, 4)
_0_OpenHRP._ad_DblArray4 = (omniORB.tcInternal.tv_alias, DblArray4._NP_RepositoryId, "DblArray4", (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_double, 4))
_0_OpenHRP._tc_DblArray4 = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_DblArray4)
omniORB.registerType(DblArray4._NP_RepositoryId, _0_OpenHRP._ad_DblArray4, _0_OpenHRP._tc_DblArray4)
del DblArray4

# typedef ... FloatArray3
class FloatArray3:
    _NP_RepositoryId = "IDL:OpenHRP/FloatArray3:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.FloatArray3 = FloatArray3
_0_OpenHRP._d_FloatArray3  = (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_float, 3)
_0_OpenHRP._ad_FloatArray3 = (omniORB.tcInternal.tv_alias, FloatArray3._NP_RepositoryId, "FloatArray3", (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_float, 3))
_0_OpenHRP._tc_FloatArray3 = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_FloatArray3)
omniORB.registerType(FloatArray3._NP_RepositoryId, _0_OpenHRP._ad_FloatArray3, _0_OpenHRP._tc_FloatArray3)
del FloatArray3

# typedef ... DblSequence
class DblSequence:
    _NP_RepositoryId = "IDL:OpenHRP/DblSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.DblSequence = DblSequence
_0_OpenHRP._d_DblSequence  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 0)
_0_OpenHRP._ad_DblSequence = (omniORB.tcInternal.tv_alias, DblSequence._NP_RepositoryId, "DblSequence", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 0))
_0_OpenHRP._tc_DblSequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_DblSequence)
omniORB.registerType(DblSequence._NP_RepositoryId, _0_OpenHRP._ad_DblSequence, _0_OpenHRP._tc_DblSequence)
del DblSequence

# typedef ... StringSequence
class StringSequence:
    _NP_RepositoryId = "IDL:OpenHRP/StringSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.StringSequence = StringSequence
_0_OpenHRP._d_StringSequence  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_OpenHRP._ad_StringSequence = (omniORB.tcInternal.tv_alias, StringSequence._NP_RepositoryId, "StringSequence", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_OpenHRP._tc_StringSequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_StringSequence)
omniORB.registerType(StringSequence._NP_RepositoryId, _0_OpenHRP._ad_StringSequence, _0_OpenHRP._tc_StringSequence)
del StringSequence

# typedef ... LongSequence
class LongSequence:
    _NP_RepositoryId = "IDL:OpenHRP/LongSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.LongSequence = LongSequence
_0_OpenHRP._d_LongSequence  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_long, 0)
_0_OpenHRP._ad_LongSequence = (omniORB.tcInternal.tv_alias, LongSequence._NP_RepositoryId, "LongSequence", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_long, 0))
_0_OpenHRP._tc_LongSequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_LongSequence)
omniORB.registerType(LongSequence._NP_RepositoryId, _0_OpenHRP._ad_LongSequence, _0_OpenHRP._tc_LongSequence)
del LongSequence

# typedef ... DblArray3
class DblArray3:
    _NP_RepositoryId = "IDL:OpenHRP/DblArray3:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.DblArray3 = DblArray3
_0_OpenHRP._d_DblArray3  = (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_double, 3)
_0_OpenHRP._ad_DblArray3 = (omniORB.tcInternal.tv_alias, DblArray3._NP_RepositoryId, "DblArray3", (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_double, 3))
_0_OpenHRP._tc_DblArray3 = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_DblArray3)
omniORB.registerType(DblArray3._NP_RepositoryId, _0_OpenHRP._ad_DblArray3, _0_OpenHRP._tc_DblArray3)
del DblArray3

# typedef ... DblArray6
class DblArray6:
    _NP_RepositoryId = "IDL:OpenHRP/DblArray6:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.DblArray6 = DblArray6
_0_OpenHRP._d_DblArray6  = (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_double, 6)
_0_OpenHRP._ad_DblArray6 = (omniORB.tcInternal.tv_alias, DblArray6._NP_RepositoryId, "DblArray6", (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_double, 6))
_0_OpenHRP._tc_DblArray6 = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_DblArray6)
omniORB.registerType(DblArray6._NP_RepositoryId, _0_OpenHRP._ad_DblArray6, _0_OpenHRP._tc_DblArray6)
del DblArray6

# typedef ... DblArray9
class DblArray9:
    _NP_RepositoryId = "IDL:OpenHRP/DblArray9:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.DblArray9 = DblArray9
_0_OpenHRP._d_DblArray9  = (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_double, 9)
_0_OpenHRP._ad_DblArray9 = (omniORB.tcInternal.tv_alias, DblArray9._NP_RepositoryId, "DblArray9", (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_double, 9))
_0_OpenHRP._tc_DblArray9 = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_DblArray9)
omniORB.registerType(DblArray9._NP_RepositoryId, _0_OpenHRP._ad_DblArray9, _0_OpenHRP._tc_DblArray9)
del DblArray9

# typedef ... DblArray12
class DblArray12:
    _NP_RepositoryId = "IDL:OpenHRP/DblArray12:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.DblArray12 = DblArray12
_0_OpenHRP._d_DblArray12  = (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_double, 12)
_0_OpenHRP._ad_DblArray12 = (omniORB.tcInternal.tv_alias, DblArray12._NP_RepositoryId, "DblArray12", (omniORB.tcInternal.tv_array, omniORB.tcInternal.tv_double, 12))
_0_OpenHRP._tc_DblArray12 = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_DblArray12)
omniORB.registerType(DblArray12._NP_RepositoryId, _0_OpenHRP._ad_DblArray12, _0_OpenHRP._tc_DblArray12)
del DblArray12

# typedef ... DblSequence3
class DblSequence3:
    _NP_RepositoryId = "IDL:OpenHRP/DblSequence3:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.DblSequence3 = DblSequence3
_0_OpenHRP._d_DblSequence3  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 3)
_0_OpenHRP._ad_DblSequence3 = (omniORB.tcInternal.tv_alias, DblSequence3._NP_RepositoryId, "DblSequence3", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 3))
_0_OpenHRP._tc_DblSequence3 = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_DblSequence3)
omniORB.registerType(DblSequence3._NP_RepositoryId, _0_OpenHRP._ad_DblSequence3, _0_OpenHRP._tc_DblSequence3)
del DblSequence3

# typedef ... DblSequence6
class DblSequence6:
    _NP_RepositoryId = "IDL:OpenHRP/DblSequence6:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.DblSequence6 = DblSequence6
_0_OpenHRP._d_DblSequence6  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 6)
_0_OpenHRP._ad_DblSequence6 = (omniORB.tcInternal.tv_alias, DblSequence6._NP_RepositoryId, "DblSequence6", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 6))
_0_OpenHRP._tc_DblSequence6 = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_DblSequence6)
omniORB.registerType(DblSequence6._NP_RepositoryId, _0_OpenHRP._ad_DblSequence6, _0_OpenHRP._tc_DblSequence6)
del DblSequence6

# typedef ... DblSequence9
class DblSequence9:
    _NP_RepositoryId = "IDL:OpenHRP/DblSequence9:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.DblSequence9 = DblSequence9
_0_OpenHRP._d_DblSequence9  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 9)
_0_OpenHRP._ad_DblSequence9 = (omniORB.tcInternal.tv_alias, DblSequence9._NP_RepositoryId, "DblSequence9", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 9))
_0_OpenHRP._tc_DblSequence9 = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_DblSequence9)
omniORB.registerType(DblSequence9._NP_RepositoryId, _0_OpenHRP._ad_DblSequence9, _0_OpenHRP._tc_DblSequence9)
del DblSequence9

# typedef ... DblArray3Sequence
class DblArray3Sequence:
    _NP_RepositoryId = "IDL:OpenHRP/DblArray3Sequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.DblArray3Sequence = DblArray3Sequence
_0_OpenHRP._d_DblArray3Sequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/DblArray3:1.0"], 0)
_0_OpenHRP._ad_DblArray3Sequence = (omniORB.tcInternal.tv_alias, DblArray3Sequence._NP_RepositoryId, "DblArray3Sequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/DblArray3:1.0"], 0))
_0_OpenHRP._tc_DblArray3Sequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_DblArray3Sequence)
omniORB.registerType(DblArray3Sequence._NP_RepositoryId, _0_OpenHRP._ad_DblArray3Sequence, _0_OpenHRP._tc_DblArray3Sequence)
del DblArray3Sequence

# typedef ... DblArray6Sequence
class DblArray6Sequence:
    _NP_RepositoryId = "IDL:OpenHRP/DblArray6Sequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.DblArray6Sequence = DblArray6Sequence
_0_OpenHRP._d_DblArray6Sequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/DblArray6:1.0"], 0)
_0_OpenHRP._ad_DblArray6Sequence = (omniORB.tcInternal.tv_alias, DblArray6Sequence._NP_RepositoryId, "DblArray6Sequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/DblArray6:1.0"], 0))
_0_OpenHRP._tc_DblArray6Sequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_DblArray6Sequence)
omniORB.registerType(DblArray6Sequence._NP_RepositoryId, _0_OpenHRP._ad_DblArray6Sequence, _0_OpenHRP._tc_DblArray6Sequence)
del DblArray6Sequence

# typedef ... DblArray12Sequence
class DblArray12Sequence:
    _NP_RepositoryId = "IDL:OpenHRP/DblArray12Sequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.DblArray12Sequence = DblArray12Sequence
_0_OpenHRP._d_DblArray12Sequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/DblArray12:1.0"], 0)
_0_OpenHRP._ad_DblArray12Sequence = (omniORB.tcInternal.tv_alias, DblArray12Sequence._NP_RepositoryId, "DblArray12Sequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/DblArray12:1.0"], 0))
_0_OpenHRP._tc_DblArray12Sequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_DblArray12Sequence)
omniORB.registerType(DblArray12Sequence._NP_RepositoryId, _0_OpenHRP._ad_DblArray12Sequence, _0_OpenHRP._tc_DblArray12Sequence)
del DblArray12Sequence

# typedef ... DblSequenceSequence
class DblSequenceSequence:
    _NP_RepositoryId = "IDL:OpenHRP/DblSequenceSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.DblSequenceSequence = DblSequenceSequence
_0_OpenHRP._d_DblSequenceSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/DblSequence:1.0"], 0)
_0_OpenHRP._ad_DblSequenceSequence = (omniORB.tcInternal.tv_alias, DblSequenceSequence._NP_RepositoryId, "DblSequenceSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/DblSequence:1.0"], 0))
_0_OpenHRP._tc_DblSequenceSequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_DblSequenceSequence)
omniORB.registerType(DblSequenceSequence._NP_RepositoryId, _0_OpenHRP._ad_DblSequenceSequence, _0_OpenHRP._tc_DblSequenceSequence)
del DblSequenceSequence

# struct LinkPosition
_0_OpenHRP.LinkPosition = omniORB.newEmptyClass()
class LinkPosition (omniORB.StructBase):
    _NP_RepositoryId = "IDL:OpenHRP/LinkPosition:1.0"

    def __init__(self, p, R):
        self.p = p
        self.R = R

_0_OpenHRP.LinkPosition = LinkPosition
_0_OpenHRP._d_LinkPosition  = (omniORB.tcInternal.tv_struct, LinkPosition, LinkPosition._NP_RepositoryId, "LinkPosition", "p", omniORB.typeMapping["IDL:OpenHRP/DblArray3:1.0"], "R", omniORB.typeMapping["IDL:OpenHRP/DblArray9:1.0"])
_0_OpenHRP._tc_LinkPosition = omniORB.tcInternal.createTypeCode(_0_OpenHRP._d_LinkPosition)
omniORB.registerType(LinkPosition._NP_RepositoryId, _0_OpenHRP._d_LinkPosition, _0_OpenHRP._tc_LinkPosition)
del LinkPosition

# typedef ... LinkPositionSequence
class LinkPositionSequence:
    _NP_RepositoryId = "IDL:OpenHRP/LinkPositionSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.LinkPositionSequence = LinkPositionSequence
_0_OpenHRP._d_LinkPositionSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/LinkPosition:1.0"], 0)
_0_OpenHRP._ad_LinkPositionSequence = (omniORB.tcInternal.tv_alias, LinkPositionSequence._NP_RepositoryId, "LinkPositionSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/LinkPosition:1.0"], 0))
_0_OpenHRP._tc_LinkPositionSequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_LinkPositionSequence)
omniORB.registerType(LinkPositionSequence._NP_RepositoryId, _0_OpenHRP._ad_LinkPositionSequence, _0_OpenHRP._tc_LinkPositionSequence)
del LinkPositionSequence

# struct CharacterPosition
_0_OpenHRP.CharacterPosition = omniORB.newEmptyClass()
class CharacterPosition (omniORB.StructBase):
    _NP_RepositoryId = "IDL:OpenHRP/CharacterPosition:1.0"

    def __init__(self, characterName, linkPositions):
        self.characterName = characterName
        self.linkPositions = linkPositions

_0_OpenHRP.CharacterPosition = CharacterPosition
_0_OpenHRP._d_CharacterPosition  = (omniORB.tcInternal.tv_struct, CharacterPosition, CharacterPosition._NP_RepositoryId, "CharacterPosition", "characterName", (omniORB.tcInternal.tv_string,0), "linkPositions", omniORB.typeMapping["IDL:OpenHRP/LinkPositionSequence:1.0"])
_0_OpenHRP._tc_CharacterPosition = omniORB.tcInternal.createTypeCode(_0_OpenHRP._d_CharacterPosition)
omniORB.registerType(CharacterPosition._NP_RepositoryId, _0_OpenHRP._d_CharacterPosition, _0_OpenHRP._tc_CharacterPosition)
del CharacterPosition

# typedef ... CharacterPositionSequence
class CharacterPositionSequence:
    _NP_RepositoryId = "IDL:OpenHRP/CharacterPositionSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.CharacterPositionSequence = CharacterPositionSequence
_0_OpenHRP._d_CharacterPositionSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/CharacterPosition:1.0"], 0)
_0_OpenHRP._ad_CharacterPositionSequence = (omniORB.tcInternal.tv_alias, CharacterPositionSequence._NP_RepositoryId, "CharacterPositionSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/CharacterPosition:1.0"], 0))
_0_OpenHRP._tc_CharacterPositionSequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_CharacterPositionSequence)
omniORB.registerType(CharacterPositionSequence._NP_RepositoryId, _0_OpenHRP._ad_CharacterPositionSequence, _0_OpenHRP._tc_CharacterPositionSequence)
del CharacterPositionSequence

# struct LinkPair
_0_OpenHRP.LinkPair = omniORB.newEmptyClass()
class LinkPair (omniORB.StructBase):
    _NP_RepositoryId = "IDL:OpenHRP/LinkPair:1.0"

    def __init__(self, charName1, linkName1, charName2, linkName2, tolerance):
        self.charName1 = charName1
        self.linkName1 = linkName1
        self.charName2 = charName2
        self.linkName2 = linkName2
        self.tolerance = tolerance

_0_OpenHRP.LinkPair = LinkPair
_0_OpenHRP._d_LinkPair  = (omniORB.tcInternal.tv_struct, LinkPair, LinkPair._NP_RepositoryId, "LinkPair", "charName1", (omniORB.tcInternal.tv_string,0), "linkName1", (omniORB.tcInternal.tv_string,0), "charName2", (omniORB.tcInternal.tv_string,0), "linkName2", (omniORB.tcInternal.tv_string,0), "tolerance", omniORB.tcInternal.tv_double)
_0_OpenHRP._tc_LinkPair = omniORB.tcInternal.createTypeCode(_0_OpenHRP._d_LinkPair)
omniORB.registerType(LinkPair._NP_RepositoryId, _0_OpenHRP._d_LinkPair, _0_OpenHRP._tc_LinkPair)
del LinkPair

# typedef ... LinkPairSequence
class LinkPairSequence:
    _NP_RepositoryId = "IDL:OpenHRP/LinkPairSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.LinkPairSequence = LinkPairSequence
_0_OpenHRP._d_LinkPairSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/LinkPair:1.0"], 0)
_0_OpenHRP._ad_LinkPairSequence = (omniORB.tcInternal.tv_alias, LinkPairSequence._NP_RepositoryId, "LinkPairSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/LinkPair:1.0"], 0))
_0_OpenHRP._tc_LinkPairSequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_LinkPairSequence)
omniORB.registerType(LinkPairSequence._NP_RepositoryId, _0_OpenHRP._ad_LinkPairSequence, _0_OpenHRP._tc_LinkPairSequence)
del LinkPairSequence

# struct CollisionPoint
_0_OpenHRP.CollisionPoint = omniORB.newEmptyClass()
class CollisionPoint (omniORB.StructBase):
    _NP_RepositoryId = "IDL:OpenHRP/CollisionPoint:1.0"

    def __init__(self, position, normal, idepth):
        self.position = position
        self.normal = normal
        self.idepth = idepth

_0_OpenHRP.CollisionPoint = CollisionPoint
_0_OpenHRP._d_CollisionPoint  = (omniORB.tcInternal.tv_struct, CollisionPoint, CollisionPoint._NP_RepositoryId, "CollisionPoint", "position", omniORB.typeMapping["IDL:OpenHRP/DblArray3:1.0"], "normal", omniORB.typeMapping["IDL:OpenHRP/DblArray3:1.0"], "idepth", omniORB.tcInternal.tv_double)
_0_OpenHRP._tc_CollisionPoint = omniORB.tcInternal.createTypeCode(_0_OpenHRP._d_CollisionPoint)
omniORB.registerType(CollisionPoint._NP_RepositoryId, _0_OpenHRP._d_CollisionPoint, _0_OpenHRP._tc_CollisionPoint)
del CollisionPoint

# typedef ... CollisionPointSequence
class CollisionPointSequence:
    _NP_RepositoryId = "IDL:OpenHRP/CollisionPointSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.CollisionPointSequence = CollisionPointSequence
_0_OpenHRP._d_CollisionPointSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/CollisionPoint:1.0"], 0)
_0_OpenHRP._ad_CollisionPointSequence = (omniORB.tcInternal.tv_alias, CollisionPointSequence._NP_RepositoryId, "CollisionPointSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/CollisionPoint:1.0"], 0))
_0_OpenHRP._tc_CollisionPointSequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_CollisionPointSequence)
omniORB.registerType(CollisionPointSequence._NP_RepositoryId, _0_OpenHRP._ad_CollisionPointSequence, _0_OpenHRP._tc_CollisionPointSequence)
del CollisionPointSequence

# struct Collision
_0_OpenHRP.Collision = omniORB.newEmptyClass()
class Collision (omniORB.StructBase):
    _NP_RepositoryId = "IDL:OpenHRP/Collision:1.0"

    def __init__(self, pair, points):
        self.pair = pair
        self.points = points

_0_OpenHRP.Collision = Collision
_0_OpenHRP._d_Collision  = (omniORB.tcInternal.tv_struct, Collision, Collision._NP_RepositoryId, "Collision", "pair", omniORB.typeMapping["IDL:OpenHRP/LinkPair:1.0"], "points", omniORB.typeMapping["IDL:OpenHRP/CollisionPointSequence:1.0"])
_0_OpenHRP._tc_Collision = omniORB.tcInternal.createTypeCode(_0_OpenHRP._d_Collision)
omniORB.registerType(Collision._NP_RepositoryId, _0_OpenHRP._d_Collision, _0_OpenHRP._tc_Collision)
del Collision

# typedef ... CollisionSequence
class CollisionSequence:
    _NP_RepositoryId = "IDL:OpenHRP/CollisionSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.CollisionSequence = CollisionSequence
_0_OpenHRP._d_CollisionSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/Collision:1.0"], 0)
_0_OpenHRP._ad_CollisionSequence = (omniORB.tcInternal.tv_alias, CollisionSequence._NP_RepositoryId, "CollisionSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/Collision:1.0"], 0))
_0_OpenHRP._tc_CollisionSequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_CollisionSequence)
omniORB.registerType(CollisionSequence._NP_RepositoryId, _0_OpenHRP._ad_CollisionSequence, _0_OpenHRP._tc_CollisionSequence)
del CollisionSequence

# struct Distance
_0_OpenHRP.Distance = omniORB.newEmptyClass()
class Distance (omniORB.StructBase):
    _NP_RepositoryId = "IDL:OpenHRP/Distance:1.0"

    def __init__(self, pair, minD, point0, point1):
        self.pair = pair
        self.minD = minD
        self.point0 = point0
        self.point1 = point1

_0_OpenHRP.Distance = Distance
_0_OpenHRP._d_Distance  = (omniORB.tcInternal.tv_struct, Distance, Distance._NP_RepositoryId, "Distance", "pair", omniORB.typeMapping["IDL:OpenHRP/LinkPair:1.0"], "minD", omniORB.tcInternal.tv_double, "point0", omniORB.typeMapping["IDL:OpenHRP/DblArray3:1.0"], "point1", omniORB.typeMapping["IDL:OpenHRP/DblArray3:1.0"])
_0_OpenHRP._tc_Distance = omniORB.tcInternal.createTypeCode(_0_OpenHRP._d_Distance)
omniORB.registerType(Distance._NP_RepositoryId, _0_OpenHRP._d_Distance, _0_OpenHRP._tc_Distance)
del Distance

# typedef ... DistanceSequence
class DistanceSequence:
    _NP_RepositoryId = "IDL:OpenHRP/DistanceSequence:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenHRP.DistanceSequence = DistanceSequence
_0_OpenHRP._d_DistanceSequence  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/Distance:1.0"], 0)
_0_OpenHRP._ad_DistanceSequence = (omniORB.tcInternal.tv_alias, DistanceSequence._NP_RepositoryId, "DistanceSequence", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:OpenHRP/Distance:1.0"], 0))
_0_OpenHRP._tc_DistanceSequence = omniORB.tcInternal.createTypeCode(_0_OpenHRP._ad_DistanceSequence)
omniORB.registerType(DistanceSequence._NP_RepositoryId, _0_OpenHRP._ad_DistanceSequence, _0_OpenHRP._tc_DistanceSequence)
del DistanceSequence

# struct WorldState
_0_OpenHRP.WorldState = omniORB.newEmptyClass()
class WorldState (omniORB.StructBase):
    _NP_RepositoryId = "IDL:OpenHRP/WorldState:1.0"

    def __init__(self, time, characterPositions, collisions):
        self.time = time
        self.characterPositions = characterPositions
        self.collisions = collisions

_0_OpenHRP.WorldState = WorldState
_0_OpenHRP._d_WorldState  = (omniORB.tcInternal.tv_struct, WorldState, WorldState._NP_RepositoryId, "WorldState", "time", omniORB.tcInternal.tv_double, "characterPositions", omniORB.typeMapping["IDL:OpenHRP/CharacterPositionSequence:1.0"], "collisions", omniORB.typeMapping["IDL:OpenHRP/CollisionSequence:1.0"])
_0_OpenHRP._tc_WorldState = omniORB.tcInternal.createTypeCode(_0_OpenHRP._d_WorldState)
omniORB.registerType(WorldState._NP_RepositoryId, _0_OpenHRP._d_WorldState, _0_OpenHRP._tc_WorldState)
del WorldState

# interface ServerObject
_0_OpenHRP._d_ServerObject = (omniORB.tcInternal.tv_objref, "IDL:OpenHRP/ServerObject:1.0", "ServerObject")
omniORB.typeMapping["IDL:OpenHRP/ServerObject:1.0"] = _0_OpenHRP._d_ServerObject
_0_OpenHRP.ServerObject = omniORB.newEmptyClass()
class ServerObject :
    _NP_RepositoryId = _0_OpenHRP._d_ServerObject[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_OpenHRP.ServerObject = ServerObject
_0_OpenHRP._tc_ServerObject = omniORB.tcInternal.createTypeCode(_0_OpenHRP._d_ServerObject)
omniORB.registerType(ServerObject._NP_RepositoryId, _0_OpenHRP._d_ServerObject, _0_OpenHRP._tc_ServerObject)

# ServerObject operations and attributes
ServerObject._d_shutdown = ((), None, None)

# ServerObject object reference
class _objref_ServerObject (CORBA.Object):
    _NP_RepositoryId = ServerObject._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def shutdown(self, *args):
        return _omnipy.invoke(self, "shutdown", _0_OpenHRP.ServerObject._d_shutdown, args)

    __methods__ = ["shutdown"] + CORBA.Object.__methods__

omniORB.registerObjref(ServerObject._NP_RepositoryId, _objref_ServerObject)
_0_OpenHRP._objref_ServerObject = _objref_ServerObject
del ServerObject, _objref_ServerObject

# ServerObject skeleton
__name__ = "OpenHRP__POA"
class ServerObject (PortableServer.Servant):
    _NP_RepositoryId = _0_OpenHRP.ServerObject._NP_RepositoryId


    _omni_op_d = {"shutdown": _0_OpenHRP.ServerObject._d_shutdown}

ServerObject._omni_skeleton = ServerObject
_0_OpenHRP__POA.ServerObject = ServerObject
omniORB.registerSkeleton(ServerObject._NP_RepositoryId, ServerObject)
del ServerObject
__name__ = "OpenHRP"

# enum ExtraJointType
_0_OpenHRP.EJ_XYZ = omniORB.EnumItem("EJ_XYZ", 0)
_0_OpenHRP.EJ_XY = omniORB.EnumItem("EJ_XY", 1)
_0_OpenHRP.EJ_Z = omniORB.EnumItem("EJ_Z", 2)
_0_OpenHRP.ExtraJointType = omniORB.Enum("IDL:OpenHRP/ExtraJointType:1.0", (_0_OpenHRP.EJ_XYZ, _0_OpenHRP.EJ_XY, _0_OpenHRP.EJ_Z,))

_0_OpenHRP._d_ExtraJointType  = (omniORB.tcInternal.tv_enum, _0_OpenHRP.ExtraJointType._NP_RepositoryId, "ExtraJointType", _0_OpenHRP.ExtraJointType._items)
_0_OpenHRP._tc_ExtraJointType = omniORB.tcInternal.createTypeCode(_0_OpenHRP._d_ExtraJointType)
omniORB.registerType(_0_OpenHRP.ExtraJointType._NP_RepositoryId, _0_OpenHRP._d_ExtraJointType, _0_OpenHRP._tc_ExtraJointType)

#
# End of module "OpenHRP"
#
__name__ = "OpenHRPCommon_idl"

_exported_modules = ( "OpenHRP", )

# The end.
