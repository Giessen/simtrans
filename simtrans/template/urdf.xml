<robot name="{{model.name}}">
  {%- for l in model.links %}
  <link name="{{l.name}}">
    <inertial>
      <mass value="{{l.mass}}" />
      <origin xyz="{{l.centerofmass[0]}} {{l.centerofmass[1]}} {{l.centerofmass[2]}}" rpy="0 -0 0" />
      <inertia ixx="{{l.inertia[0][0]}}" ixy="{{l.inertia[0][1]}}" ixz="{{l.inertia[0][2]}}" iyy="{{l.inertia[1][1]}}" iyz="{{l.inertia[1][2]}}" izz="{{l.inertia[2][2]}}" />
    </inertial>
    {%- for v in l.visuals %}
    {%- set trans = v.gettranslation() %}
    {%- set rpy = v.getrpy() %}
    <visual>
      <origin xyz="{{trans[0]}} {{trans[1]}} {{trans[2]}}" rpy="{{rpy[0]}} {{rpy[1]}} {{rpy[2]}}" />
      {%- if v.shapeType == ShapeModel.SP_MESH %}
      <geometry>
        <mesh filename="model://{{model.name}}/{{v.name}}.dae" scale="1 1 1" />
      </geometry>
      {%- endif %}
      {%- if v.shapeType == ShapeModel.SP_BOX %}
      <geometry>
        <box size="{{v.data.x}} {{v.data.y}} {{v.data.z}}" />
      </geometry>
      {%- endif %}
      {%- if v.shapeType == ShapeModel.SP_CYLINDER %}
      <geometry>
        <cylinder radius="{{v.data.radius}}" length="{{v.data.height}}" />
      </geometry>
      {%- endif %}
      {%- if v.shapeType == ShapeModel.SP_SPHERE %}
      <geometry>
        <sphere radius="{{v.data.radius}}" />
      </geometry>
      {%- endif %}
    </visual>
    <collision>
      <origin xyz="{{trans[0]}} {{trans[1]}} {{trans[2]}}" rpy="{{rpy[0]}} {{rpy[1]}} {{rpy[2]}}" />
      {%- if v.shapeType == ShapeModel.SP_MESH %}
      <geometry>
        <mesh filename="model://{{model.name}}/{{v.name}}.stl" scale="1 1 1" />
      </geometry>
      {%- endif %}
      {%- if v.shapeType == ShapeModel.SP_BOX %}
      <geometry>
        <box size="{{v.data.x}} {{v.data.y}} {{v.data.z}}" />
      </geometry>
      {%- endif %}
      {%- if v.shapeType == ShapeModel.SP_CYLINDER %}
      <geometry>
        <cylinder radius="{{v.data.radius}}" length="{{v.data.height}}" />
      </geometry>
      {%- endif %}
      {%- if v.shapeType == ShapeModel.SP_SPHERE %}
      <geometry>
        <sphere radius="{{v.data.radius}}" />
      </geometry>
      {%- endif %}
    </collision>
    {%- endfor %}
  </link>
  {%- endfor %}
  {%- for j in model.joints %}
  <joint name="{{j.name}}" type="{{j.jointType}}">
    {%- set trans = j.gettranslation() %}
    {%- set rpy = j.getrpy() %}
    <origin xyz="{{trans[0]}} {{trans[1]}} {{trans[2]}}" rpy="{{rpy[0]}} {{rpy[1]}} {{rpy[2]}}" />
    <axis xyz="{{j.axis[0]}} {{j.axis[1]}} {{j.axis[2]}}" />
    <parent link="{{j.parent}}" />
    <child link="{{j.child}}" />
    {%- if j.jointType == JointModel.J_REVOLUTE or j.jointType == JointModel.J_PRISMATIC %}
    <limit lower="{{j.limit[1]}}" upper="{{j.limit[0]}}" effort="100" velocity="100" />
    {%- endif %}
  </joint>
  {%- endfor %}
  {%- for s in model.sensors %}
  <sensor name="{{s.name}}" update_rate="{{s.rate}}">
    {%- set trans = s.gettranslation() %}
    {%- set rpy = s.getrpy() %}
    <origin xyz="{{trans[0]}} {{trans[1]}} {{trans[2]}}" rpy="{{rpy[0]}} {{rpy[1]}} {{rpy[2]}}" />
    <parent link="{{s.parent}}" />
    {%- if s.sensorType == "ray" %}
    <ray>
      <horizontal samples="100" resolution="1" min_angle="{{s.min_angle}}" max_angle="{{s.max_angle}}"/>
      <vertical samples="1" resolution="1" min_angle="0" max_angle="0"/>
    </ray>
    {%- elif s.sensorType == "camera" %}
    <camera>
      <image width="{{s.data.width}}" height="{{s.data.height}}" hfov="{{s.data.fov}}" format="RGB8" near="{{s.data.near}}" far="{{s.data.far}}"/>
    </camera>
    {%- endif %}
  </sensor>
  {%- endfor %}
</robot>
