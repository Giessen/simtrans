#VRML V2.0 utf8

DEF {{name}} Transform {
  {%- if visual.scale is not none %}
  scale {{visual.scale[0]}} {{visual.scale[1]}} {{visual.scale[2]}}
  {%- endif %}
  {%- if visual.trans is not none %}
  translation {{visual.trans[0]}} {{visual.trans[1]}} {{visual.trans[2]}}
  {%- endif %}
  {%- if visual.rot is not none %}
  {%- set angle = tf.rotation_from_matrix(tf.quaternion_matrix(visual.rot)) %}
  rotation {{angle[1][0]}} {{angle[1][1]}} {{angle[1][2]}} {{angle[0]}}
  {%- endif %}
  children [
    {%- for c in visual.children recursive %}
    {%- if c.shapeType %}
    {%- if c.shapeType == ShapeModel.SP_MESH %}
    Shape {
      appearance Appearance {

        material Material {
          diffuseColor 0.85 0.85 0.85
          specularColor 0.85 0.85 0.85
          emissiveColor 0.05 0.05 0.05
        }
        {%- if c.image is not none %}
        texture ImageTexture {
          url "{{c.image}}"
        }
        {%- endif %}
      }
      geometry IndexedFaceSet {
        coord Coordinate {
          point [
            {%- for n in c.data.vertex %}
            {{n[0]}} {{n[1]}} {{n[2]}},
            {%- endfor %}
          ]
        }
        coordIndex [
          {%- for n in c.data.vertex_index %}
          {{n[0]}}, {{n[1]}}, {{n[2]}}, -1,
          {%- endfor %}
        ]
        {%- if c.data.normal is not none %}
        normal Normal {
          vector [
            {%- for n in c.data.normal %}
            {{n[0]}} {{n[1]}} {{n[2]}},
            {%- endfor %}
          ]
        }
        normalIndex [
          {%- for n in c.data.normal_index %}
          {{n[0]}}, {{n[1]}}, {{n[2]}}, -1,
          {%- endfor %}
        ]
        normalPerVertex TRUE
        {%- else %}
        normalPerVertex FALSE
        {%- endif %}
        {%- if c.data.color is not none %}
        color Color {
          vector [
            {%- for n in c.data.color %}
            {{n[0]}} {{n[1]}} {{n[2]}},
            {%- endfor %}
          ]
        }
        colorIndex [
          {%- for n in c.data.color_index %}
          {{n[0]}}, {{n[1]}}, {{n[2]}}, -1,
          {%- endfor %}
        ]
        colorPerVertex TRUE
        {%- else %}
        colorPerVertex FALSE
        {%- endif %}
        {%- if c.data.uvmap is not none %}
        texCoord TextureCoordinate {
          point [
            {%- for n in c.data.uvmap %}
            {{n[0]}} {{n[1]}},
            {%- endfor %}
          ]
        }
        texCoordIndex [
          {%- for n in c.data.uvmap_index %}
          {{n[0]}}, {{n[1]}}, {{n[2]}}, -1,
          {%- endfor %}
        ]
        {%- endif %}
      }
    }
    {%- elif c.shapeType == ShapeModel.SP_BOX %}
    Shape {
      geometry Box {
        size {{c.data.x}} {{c.data.y}} {{c.data.z}}
      }
    }
    {%- elif c.shapeType == ShapeModel.SP_SPHERE %}
    Shape {
      geometry Sphere {
        radius {{c.data.radius}}
      }
    }
    {%- elif c.shapeType == ShapeModel.SP_CYLINDER %}
    Shape {
      geometry Cylinder {
        radius {{c.data.radius}}
        height {{c.data.height}}
      }
    }
    {%- endif %}
    {%- else %}
    Transform {
      {%- if c.scale is not none %}
      scale {{c.scale[0]}} {{c.scale[1]}} {{c.scale[2]}}
      {%- endif %}
      {%- if c.trans is not none %}
      translation {{c.trans[0]}} {{c.trans[1]}} {{c.trans[2]}}
      {%- endif %}
      {%- if c.rot is not none %}
      {%- set angle = tf.rotation_from_matrix(tf.quaternion_matrix(c.rot)) %}
      rotation {{angle[1][0]}} {{angle[1][1]}} {{angle[1][2]}} {{angle[0]}}
      {%- endif %}
      {%- if c.children %}
      children [
        {{ loop(c.children)|indent(4, True) }}
      ]
      {%- endif %}
    }
    {%- endif %}
    {%- endfor %}
  ]
}
